name: release

on:
  push:
    tags:
      - "v*"

jobs:
  release-nhctl:
    needs: [build-syncthing-macos-windows, build-syncthing-linux-amd64]
    name: Release nhctl
    runs-on: macos-latest
    environment:
      name: release
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.7

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get tag
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "PREVERSION=$(git for-each-ref --sort='-creatordate' --format='%(refname:lstrip=2)' --count=50 'refs/tags/*' | grep -v 'rc' | awk 'NR==2')" >> $GITHUB_ENV

      - name: Get synchting macos and windows cache
        uses: actions/download-artifact@v2
        with:
          name: synchthing-macos-windows-cache-${GITHUB_SHA}
          path: ./

      - name: Get synchting linux cache
        uses: actions/download-artifact@v2
        with:
          name: synchthing-linux-cache-${GITHUB_SHA}
          path: ./

      - name: Build nhctl
        env:
          VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          export GITHUB_ACTION=true
          make nhctl-cross
          shasum -a 256 build/nhctl-linux-amd64 | awk '{print $1}' > build/nhctl-linux-amd64-SHA256
          shasum -a 256 build/nhctl-linux-arm64 | awk '{print $1}' > build/nhctl-linux-arm64-SHA256
          shasum -a 256 build/nhctl-darwin-amd64 | awk '{print $1}' > build/nhctl-darwin-amd64-SHA256
          shasum -a 256 build/nhctl-windows-amd64.exe | awk '{print $1}' > build/nhctl-windows-amd64-SHA256
          shasum -a 256 build/nhctl-darwin-arm64 | awk '{print $1}' > build/nhctl-darwin-arm64-SHA256

      - name: Release Note
        id: release-note
        run: |
          echo "$(./release-note.sh ${{ env.PREVERSION }} ${{ env.RELEASE_VERSION }})" > release_note.md

      - name: Create nhctl Pre Release
        id: create_pre_release
        if: "contains(github.ref,'rc')"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Create nhctl Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: release_note.md

      - name: Collect Release Info
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" >> UPLOAD_URL
          echo ${{ env.RELEASE_VERSION }} >> RELEASE_VERSION
          git reset --hard

      - name: Upload RELEASE_VERSION
        uses: actions/upload-artifact@v2
        with:
          name: RELEASE_VERSION
          path: RELEASE_VERSION

      - name: Upload UPLOAD_URL
        uses: actions/upload-artifact@v2
        with:
          name: UPLOAD_URL
          path: UPLOAD_URL

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-windows-amd64.exe
          asset_name: nhctl-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-windows-amd64-SHA256
          asset_name: nhctl-windows-amd64-SHA256
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-darwin-amd64
          asset_name: nhctl-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-darwin-amd64-SHA256
          asset_name: nhctl-darwin-amd64-SHA256
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-darwin-arm64
          asset_name: nhctl-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-darwin-arm64-SHA256
          asset_name: nhctl-darwin-arm64-SHA256
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-linux-amd64
          asset_name: nhctl-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/nhctl-linux-amd64-SHA256
          asset_name: nhctl-linux-amd64-SHA256
          asset_content_type: application/octet-stream

  build-syncthing-linux-amd64:
    name: Build syncthing amd64
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.7

      - name: Get tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Checkout syncthing
        uses: actions/checkout@v2.3.4
        with:
          repository: nocalhost/syncthing
          path: ./syncthing-source
          ref: main

      - name: Build syncthing-amd64
        working-directory: ./syncthing-source
        run: go run build.go -nocalhostVersion=${{ env.RELEASE_VERSION }} -nocalhostCommitId="${GITHUB_SHA}" -goarch amd64 tar

      - name: Upload linux syncthing to artifact
        uses: actions/upload-artifact@v2
        with:
          path: ./syncthing-source/syncthing-linux-amd64.tar.gz
          name: synchthing-linux-cache-${GITHUB_SHA}

  build-syncthing-macos-windows:
    name: Build syncthing macos
    runs-on: macos-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.7

      - name: Get tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Checkout syncthing
        uses: actions/checkout@v2.3.4
        with:
          repository: nocalhost/syncthing
          path: ./syncthing-source
          ref: main

      - name: Build syncthing
        working-directory: ./syncthing-source
        run: |
          go run build.go -nocalhostVersion=${{ env.RELEASE_VERSION }} -nocalhostCommitId="${GITHUB_SHA}" -goarch amd64 zip
          go run build.go -nocalhostVersion=${{ env.RELEASE_VERSION }} -nocalhostCommitId="${GITHUB_SHA}" -goos=windows -goos=windows -goarch amd64 zip
          go run build.go -nocalhostVersion=${{ env.RELEASE_VERSION }} -nocalhostCommitId="${GITHUB_SHA}" -goarch arm64 zip

      - name: Update macos and windows synchting to artifact
        uses: actions/upload-artifact@v2
        with:
          path: |
            ./syncthing-source/syncthing-macos-amd64.zip
            ./syncthing-source/syncthing-windows-amd64.zip
            ./syncthing-source/syncthing-macos-arm64.zip
          name: synchthing-macos-windows-cache-${GITHUB_SHA}

